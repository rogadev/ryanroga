---
interface ContactInfo {
  name: string
  email?: string
  linkedin?: string
  github?: string
}

// Contact info will be loaded after CAPTCHA verification
const contactInfo: ContactInfo = {
  name: 'Ryan Roga',
}
---

<section id='contact' class='py-12 sm:py-20 bg-gray-50 dark:bg-gray-800'>
  <div class='container mx-auto px-4'>
    <div class='max-w-2xl mx-auto'>
      <div class='text-center mb-8 sm:mb-12'>
        <h2
          class='text-3xl sm:text-4xl font-bold text-gray-900 dark:text-white mb-4'
        >
          Get in Touch
        </h2>
        <p class='text-lg sm:text-xl text-gray-600 dark:text-gray-300'>
          Interested in working together? Let's connect through my contact
          information below!
        </p>
      </div>

      <div
        class='max-w-md mx-auto bg-white dark:bg-gray-700 rounded-xl shadow-lg p-6 sm:p-8'
      >
        <h3
          class='text-xl sm:text-2xl font-semibold text-gray-900 dark:text-white mb-6 text-center'
        >
          Contact Information
        </h3>

        <!-- Hide contact info initially -->
        <div
          id='contact-info'
          class='space-y-4 hidden opacity-0 transition-opacity duration-300'
        >
          <div class='flex items-center justify-center'>
            <svg
              class='w-6 h-6 text-blue-600 dark:text-blue-400 mr-4'
              fill='none'
              stroke='currentColor'
              viewBox='0 0 24 24'
              aria-hidden='true'
            >
              <path
                stroke-linecap='round'
                stroke-linejoin='round'
                stroke-width='2'
                d='M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z'
              ></path>
            </svg>
            <a
              href={`mailto:${contactInfo.email}`}
              class='text-gray-600 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400'
              aria-label='Send email'
            >
              {contactInfo.email}
            </a>
          </div>
          <div class='flex items-center justify-center'>
            <svg
              class='w-6 h-6 text-blue-600 dark:text-blue-400 mr-4'
              fill='none'
              stroke='currentColor'
              viewBox='0 0 24 24'
              aria-hidden='true'
            >
              <path
                stroke-linecap='round'
                stroke-linejoin='round'
                stroke-width='2'
                d='M16 8a6 6 0 016 6v7h-4v-7a2 2 0 00-2-2 2 2 0 00-2 2v7h-4v-7a6 6 0 016-6z'
              ></path>
              <path
                stroke-linecap='round'
                stroke-linejoin='round'
                stroke-width='2'
                d='M2 9h4v12H2z'></path>
              <circle cx='4' cy='4' r='2' stroke-width='2'></circle>
            </svg>
            <a
              href={contactInfo.linkedin}
              target='_blank'
              rel='noopener noreferrer'
              class='text-gray-600 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400'
              aria-label='LinkedIn profile'
            >
              LinkedIn <span id='linkedin-username'></span>
            </a>
          </div>
          <div class='flex items-center justify-center'>
            <svg
              class='w-6 h-6 text-blue-600 dark:text-blue-400 mr-4'
              fill='none'
              stroke='currentColor'
              viewBox='0 0 24 24'
              aria-hidden='true'
            >
              <path
                stroke-linecap='round'
                stroke-linejoin='round'
                stroke-width='2'
                d='M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22'
              ></path>
            </svg>
            <a
              href={contactInfo.github}
              target='_blank'
              rel='noopener noreferrer'
              class='text-gray-600 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400'
              aria-label='GitHub profile'
            >
              GitHub <span id='github-username'></span>
            </a>
          </div>
        </div>

        <!-- Add CAPTCHA container -->
        <div
          id='captcha-container'
          class='mt-6 flex justify-center opacity-100 transition-opacity duration-300'
        >
          <div id='turnstile-container' aria-label='CAPTCHA verification'></div>
        </div>

        <!-- Show this message before verification -->
        <p
          id='pre-verification-message'
          class='text-gray-600 dark:text-gray-300 text-center mt-4 opacity-100 transition-opacity duration-300'
        >
          Please complete the verification to view contact information.
        </p>
      </div>
    </div>
  </div>
</section>

<script>
  type TurnstileCallback = (token: string) => void

  interface TurnstileOptions {
    sitekey: string
    callback: TurnstileCallback
  }

  interface Window {
    onloadTurnstileCallback: () => void
    turnstile: {
      render: (selector: string, options: TurnstileOptions) => void
    }
  }

  const handleVerification = async (token: string): Promise<void> => {
    try {
      const response = await fetch('/api/validate-turnstile', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ token }),
      })

      const result = await response.json()

      if (!result.success) return

      const elements = {
        contactInfo: document.getElementById('contact-info'),
        preVerification: document.getElementById('pre-verification-message'),
        captchaContainer: document.getElementById('captcha-container'),
      }

      if (
        !elements.contactInfo ||
        !elements.preVerification ||
        !elements.captchaContainer
      ) {
        console.error('Required elements not found')
        return
      }

      // Fade out verification elements
      elements.captchaContainer.classList.add('opacity-0')
      elements.preVerification.classList.add('opacity-0')

      setTimeout(() => {
        elements.captchaContainer.style.display = 'none'
        elements.preVerification.style.display = 'none'
        elements.contactInfo.classList.remove('hidden')
        elements.contactInfo.style.display = 'block'
        requestAnimationFrame(() => {
          elements.contactInfo.classList.remove('opacity-0')
        })
      }, 300)

      updateContactLinks(elements.contactInfo, result.data)
    } catch (error) {
      console.error('Validation error:', error)
    }
  }

  const updateContactLinks = (
    container: HTMLElement,
    data: { email: string; linkedin: string; github: string }
  ): void => {
    const emailLink = container.querySelector<HTMLAnchorElement>(
      'a[aria-label="Send email"]'
    )
    const linkedinLink = container.querySelector<HTMLAnchorElement>(
      'a[aria-label="LinkedIn profile"]'
    )
    const githubLink = container.querySelector<HTMLAnchorElement>(
      'a[aria-label="GitHub profile"]'
    )

    if (emailLink) {
      emailLink.href = `mailto:${data.email}`
      emailLink.textContent = data.email
    }

    if (linkedinLink) {
      linkedinLink.href = data.linkedin
      const username = linkedinLink.querySelector('#linkedin-username')
      if (username) {
        username.textContent = `(${data.linkedin.split('/').pop()})`
      }
    }

    if (githubLink) {
      githubLink.href = data.github
      const username = githubLink.querySelector('#github-username')
      if (username) {
        username.textContent = `(${data.github.split('/').pop()})`
      }
    }
  }

  window.onloadTurnstileCallback = function () {
    window.turnstile.render('#turnstile-container', {
      sitekey: '0x4AAAAAAA1jHJu-9QywpvDf',
      callback: handleVerification,
    })
  }
</script>

<script
  is:inline
  src='https://challenges.cloudflare.com/turnstile/v0/api.js?onload=onloadTurnstileCallback'
  async
  defer></script>
